*LeaderF-filer*

INTRODUCTION~

This plugin is an extension of LeaderF, it is used to navigate the files in
directory.

==============================================================================
REQUIREMENTS~

- vim7.4.330 or higher.
- vim compiled with Python support, you can check by using `echo has('python')`
  or `echo has('python3')` to see if the result is 1.
- Support vim-devicons (https://github.com/ryanoasis/vim-devicons)

==============================================================================
OPTIONS~

g:Lf_FilerShowHiddenFiles                          *g:Lf_FilerShowHiddenFiles*
    If enabled, shows hidden files by default.

    Default value: 0

g:Lf_FilerAcceptDirSelectionCmd              *g:Lf_FilerAcceptDirSelectionCmd*
    Command to execute when accepting selection if directory.

    Default value: 'lcd'

g:Lf_FilerShowDevIcons                          *g:Lf_FilerShowDevIcons*
    Use vim-devicons to display icons.
    NOTE: https://github.com/ryanoasis/vim-devicons is required.

    Default value: 0

g:Lf_FilerShowCurrentDirDot                     *g:Lf_FilerShowCurrentDirDot*
    Whether to display `.` for the current directory.

    Default value: 0

g:Lf_FilerCommandMap                            *g:Lf_FilerCommandMap*
    Customize insert mode mappings.

    Default value:
>
    let g:Lf_FilerCommandMap = {
    \   '<C-h>': 'open_parent',
    \   '<C-l>': 'open_current',
    \   '<C-f>': 'toggle_hidden_files',
    \   '<C-g>': 'goto_root_marker_dir',
    \}
<

g:Lf_FilerNormalMap                             *g:Lf_FilerNormalMap*
    Customize normal mode mappings.

    Default value:
>
    let g:Lf_FilerNormalMap = {
    \   'h':        'open_parent',
    \   '<C-h>':    'open_parent',
    \   'l':        'open_current',
    \   '<C-l>':    'open_current',
    \   'I':        'toggle_hidden_files',
    \   '<C-g>':    'goto_root_marker_dir',
    \}
<


==============================================================================
USAGE~

------------------------------------------------------------------------------
COMMANDS~

:LeaderfFiler                                *:LeaderfFiler*
    navigate the files in directory.

ARGUMENTS~

`--auto-cd`
    Change the working directory while navigating with LeaderF-filer.


------------------------------------------------------------------------------
MAPPINGS~

INERT MODE:
Key                     Action~
-----------  -------------------------------
`<C-h>`      Show files in parent directory
`<C-l>`      Show files in directory under cursor
`<C-f>`      Toggle show hidden files
`<C-g>`      Show files of directory where |g:Lf_RootMarkers| exists
`<CR>`       Open the file under cursor or create a file with the input pattern
             file name (when empty results)

NORMAL MODE:
Key                     Action~
-----------  -------------------------------
`h`/`<C-h>`  Show files in parent directory
`l`/`<C-l>`  Show files in directory under cursor
`I`          Toggle show hidden files
`<C-g>`      Show files of directory where |g:Lf_RootMarkers| exists
`o`/`<CR>`   Open the file under cursor or create a file with the input pattern
             file name (when empty results)
`p`          Preview the file.

Customizable key mapping using |g:Lf_FilerCommandMap| and
|g:Lf_FilerNormalMap|.

The key is a key and the value is a dictionary of action names.

Example:
>
    let g:Lf_FilerNormalMap = {
    \   'h': 'open_parent',
    \   'l': 'open_current',
    \   '.': 'toggle_hidden_files',
    \   '~': 'goto_root_marker_dir',
    \}
<

Action list:

`open_parent`
    Show files in parent directory

`open_current`
    Show files in directory under cursor

`toggle_hidden_files`
    Toggle show hidden files

`goto_root_marker_dir`
    Show files of directory where |g:Lf_RootMarkers| exists


NOTE: Other mappings can be customized with option |g:Lf_CommandMap| or
      |g:Lf_NormalMap| in LeaderF.

------------------------------------------------------------------------------
HIGHLIGHTS~

Lf_hl_filerPath                                 *Lf_hl_filerPath*
    default: `highlight def link Lf_hl_filerPath Normal`

Lf_hl_filerDir                                  *Lf_hl_filerDir*
    default: `highlight def link Lf_hl_filerDir Identifier`

Lf_hl_filerNoContent                            *Lf_hl_filerNoContent*
    default: `highlight def link Lf_hl_filerNoContent Lf_hl_filerNoContent`

==============================================================================
vim:tw=78:ts=4:ft=help:norl
